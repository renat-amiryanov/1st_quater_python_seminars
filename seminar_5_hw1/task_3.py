"""
Задача 3.
[+] Создайте два списка — один с названиями языков программирования, другой — с числами от 1 до длины первого.
['python', 'c#']
[1,2]
Вам нужно сделать две функции:
[+] - первая из которых создаст список кортежей, состоящих из номера и языка,
написанного большими буквами.
[(1,'PYTHON'), (2,'C#')]
Вторая — которая отфильтрует этот список следующим образом:
если сумма очков слова имеет в делителях номер,с которым она в паре в кортеже,
то кортеж остается, его номер заменяется на сумму очков.
[сумма очков c# = 102, в делителях есть 2 с которым в паре. Значит список будет]
[(1,'PYTHON'), (102,'C#')] C -67, # - 35
Если нет — удаляется.
Суммой очков называется сложение порядковых номеров букв в слове.
Это — 16-ричная система, поищите, как правильнее и быстрее получать эти символы.
Cложите получившиеся числа и верните из функции в качестве ответа вместе с преобразованным списком

"""
langs = ['python', 'c#']
nums = [i for i in range(1, len(langs) + 1)]


def create_list_of_tuples(list1, list2):
    """
    Функция которая создает список кортежей, состоящих из номера и языка,
    написанного большими буквами.
    :param list1: Список номеров
    :param list2: Список языков
    :return: Список кортежей
    """
    return list(zip(list1, [l.upper() for l in list2]))


def get_sum_of_codes(value):
    """
    Функция которая возвращаетс сумму порядковых номеров букв в слове
    :param value:  Слово
    :return: Сумма порядковых номеров
    """
    return sum([ord(ch) for ch in value])


langs_and_nums = create_list_of_tuples(nums, langs) # Output: [(1, 'PYTHON'), (2, 'C#')]
sums = list(map(get_sum_of_codes,[l.upper() for l in langs])) # Output: [482, 102]
print(sums)